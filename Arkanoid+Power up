import tkinter as tk
from random import randrange

def ball_move():
   global ball, movement, desk
   canvas.move(ball, movement[0], movement[1])
   pos = canvas.coords(ball)
   desk_pos = canvas.coords(desk)
   overlap = canvas.find_overlapping(desk_pos[0], desk_pos[1], desk_pos[2], desk_pos[3])
   destroy_brick()
   if pos[2] >= width: 
       movement = [movement[0] * -1, movement[1]]
   elif pos[3] >= height:  
       canvas.delete('all')
       text = canvas.create_text(width//2, height//2, text='YOU LOST')
   elif pos[0] <= 0:   
       movement = [movement[0] * -1, movement[1]]
   elif pos[1] <= 0:     
       movement = [movement[0], movement[1] * -1]
   elif ball in overlap:
       movement = bounce(pos, desk_pos)
   canvas.after(4, ball_move)



def mover(e):
   global x
   x2 = e.x
   if x != 0:
       mouse = x2-x
       canvas.move(desk, mouse, 0)
       x= e.x


def bounce(ball_pos, rec_pos):
   ball_pos = (ball_pos[0] + ball_pos[2])//2
   rec_middle = (rec_pos[0] + rec_pos[2])//2
   ball_to_rec = ball_pos - rec_middle
   return [ball_to_rec//(rec_w//3), -1]    # rec_w//3 => vector x je 0-3


def starter(e):
   global x, y
   zoz = canvas.find_overlapping(e.x, e.y, e.x+1, e.y+1)
   if desk in zoz:
       x = e.x
       y = e.y
       ball_move()
       canvas.delete(start_text)


root = tk.Tk()
width = 500
height = 500
ws = 10

brick_w = 50
brick_h = 30
bricks_x = 10
bricks_y = 4
bricks = []

rec_w = 100
canvas = tk.Canvas(root, width= width, height= height, bg= 'white')
canvas.pack()
movement = [0,1]
ball = canvas.create_oval(width//2 - ws, height//2 - ws, width//2 + ws, height//2 + ws, fill = 'red')
desk = canvas.create_rectangle(width//2 - rec_w, height - 30, width//2 + rec_w, height - 20, fill= 'yellow')
start_text = canvas.create_text(width//2, height//2 - 50, text='KLICK ON RECTANGLE TO START\nplay on fullscreen\nuse mouse to move')



def create_bricks():
   colours = ['red','turquoise','yellow','blue', 'lime']
   for y in range(bricks_y):
       for x in range(bricks_x):
           bricks.append(canvas.create_rectangle(x*brick_w,y*brick_h,x*brick_w+brick_w,y*brick_h+brick_h, fill =  colours[y%len(colours)],width = 5, outline ='white'))
chance = 0
def destroy_brick():
   global movement
   global chance
   coords_ball = canvas.coords(ball)
   items_list = canvas.find_overlapping(coords_ball[0],coords_ball[1],coords_ball[2],coords_ball[3])
   x_overlap = (coords_ball[0]+coords_ball[2])/2
   y_overlap = (coords_ball[1]+coords_ball[3])/2
   top = canvas.find_overlapping(x_overlap,coords_ball[1],x_overlap+1, coords_ball[1])
   bottom = canvas.find_overlapping(x_overlap,coords_ball[3],x_overlap+1, coords_ball[3]) 
   left = canvas.find_overlapping(coords_ball[0],y_overlap, coords_ball[0],y_overlap+1)
   right = canvas.find_overlapping(coords_ball[2],y_overlap, coords_ball[2],y_overlap+1)
   print(items_list)
   p = 0
   
  
   for i in items_list:
       if i in bricks:
         if chance >=20:
           canvas.create_text(width//2, height//2 + 100, text='POWER-UP!')
           bricks.remove(i)
           canvas.delete(i)
           canvas.itemconfig(ball, fill = 'black')
           print('powerup')
         else:
           if i in top or i in bottom:
             if p ==0:
               bricks.remove(i)
               canvas.delete(i)
               movement[1]*=-1
               chance = randrange(1,50)
               p+=1
           elif i in left or i in right:
             if p ==0:
               bricks.remove(i)
               canvas.delete(i)
               movement[0]*=-1
               chance = randrange(1,50)
               p +=1


canvas.bind('<Button-1>', starter)
canvas.bind('<Motion>',mover)


create_bricks()

root.mainloop()
